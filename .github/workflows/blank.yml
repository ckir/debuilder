# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  nodejs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get NodeJS latest available version
        id: env-setup
        run: |
          version=$(curl -sL https://nodejs.org/en/download/releases/ | grep -oP 'v\d+\.\d+\.\d+' | head -1)
          version="${version:1}"
          # Check if version is in semantic versioning format
          if echo "$version" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "NodeJS latest available version found is: $version"
            echo "nodejs_latest=$version" >> $GITHUB_OUTPUT
          else
            echo "Version [$version] is not in semantic versioning format"
            exit 1
          fi

      # Runs a set of commands using the runners shell
      - name: Check if package already exists
        run: |
          latest_version=${{ steps.env-setup.outputs.nodejs_latest }}
          echo "$latest_version"

  python:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get Python's latest available version
        id: env-setup
        run: |
          version=$(wget -qO- https://www.python.org | grep -oE 'Latest: .*[0-9]+\.[0-9]+\.[0-9]+' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          # Check if version is in semantic versioning format
          if echo "$version" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "Python's latest available version found is: $version"
            echo "python_latest=$version" >> $GITHUB_OUTPUT
          else
            echo "Python version [$version] is not in semantic versioning format"
            exit 1
          fi

      - name: Check if package already exists
        run: |
          latest_version=${{ steps.env-setup.outputs.python_latest }}
          echo "$latest_version"